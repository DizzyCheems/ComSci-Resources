
import java.util.*;
 
class Recursive2DMatrixtoLinkedList{
    static int dim= 3;
    static class Node {
        int data;
        Node next;
        Node prev;
        Node up;
        Node down;
    };
    static Node createNode(int data)
    {
        Node temp = new Node();
        temp.data = data;
        temp.next = null;
        temp.prev = null;
        temp.up = null;
        temp.down = null;
        return temp;
    }
    static Node convert(int mtrx[][],int i, int j,Node curr)
    {
     
        if (i >= dim || j >= dim)
        {
            return null;
        }
     
        Node temp = createNode(mtrx[i][j]);
        temp.prev = curr;
        temp.up = curr;
        temp.next = convert(mtrx, i, j + 1, temp);
        temp.down= convert(mtrx, i + 1, j, temp);
        return temp;
    }
     
    static Node convert(int mtrx[][])
    {
        return convert(mtrx, 0, 0, null);
    }
    static void display(Node head)
    {
        Node rPtr;
        Node dPtr = head;
        while (dPtr != null) {
            rPtr = dPtr;
            while (rPtr!=null) {
                System.out.print(rPtr.data+" ");
                rPtr = rPtr.next;
            }
     
            System.out.print("\n");
            dPtr = dPtr.down;
        }
    }
    public static void main(String args[])
    {
     
        int mtrx[][] = {
            { 1, 2, 3 },
            { 4, 5, 6 },
            { 7, 8, 9 }
        };
     
        Node list = convert(mtrx);
     
        display(list);
     
    }
}
 
// This code is contributed by AbhiThakur